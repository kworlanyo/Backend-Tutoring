import { useState } from "react";

function AddBook({ user, setLoggedInUser }) {
  const [title, setTitle] = useState("");
  const [author, setAuthor] = useState("");

  async function handleAddBook(e) {
    e.preventDefault();

    // We first try to add a new book object or document into the books collection
    // We create a settings object since it is a post request and then we add to the fetch request
    try {
      const settings = {
        method: "POST",
        body: JSON.stringify({ title, author }),
        headers: {
          "Content-Type": "application/json",
        },
      };

      const response = await fetch("http://localhost:5000/books", settings);

      // If we get a successful response, we send the response, which is the id of the created book generated by mongodb into another settings object, then we send a patch request to the user document that has logged in.
      if (response.ok) {
        const newBookId = await response.json();

        const settings2 = {
          method: "PATCH",
          body: JSON.stringify({ bookId: newBookId.id }),
          headers: {
            "Content-Type": "application/JSON",
          },
        };

        const response2 = await fetch(`http://localhost:5000/users/${user.id}/books`, settings2);

        // if the response is okay, it means that the server has sent a populated data and we will set the loggedInUser state variable with that populated data.
        if (response2.ok) {
          const updatedUser = await response2.json();

          setTitle("");
          setAuthor("");

          setLoggedInUser(updatedUser);
        } else {
          const { error } = await response2.json();
          throw new Error(error.message);
        }
      } else {
        const { error } = await response.json();
        throw new Error(error.message);
      }
    } catch (err) {
      console.log(err);
    }
  }

  return (
    <>
      <form className="form" onSubmit={handleAddBook}>
        <label>Title</label>
        <input value={title} onChange={(e) => setTitle(e.target.value)} />

        <label>Author</label>
        <input value={author} onChange={(e) => setAuthor(e.target.value)} />

        <button>Add Book</button>
      </form>
    </>
  );
}

export default AddBook;
